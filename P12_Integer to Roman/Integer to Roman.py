# coding=utf8

__author__ = 'smilezjw'


def intToRoman(num):
    intvalues = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]  # 两个特殊罗马字符左减得到的数字
    notations = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I']
    roman = ''
    for i in xrange(len(intvalues)):
        while num >= intvalues[i]:
            num -= intvalues[i]   # 从高位开始计算
            roman += notations[i]
    return roman

if __name__ == '__main__':
    print intToRoman(1)
    print intToRoman(199)

###############################################################################################
# 这道题首先需要搞清楚罗马字母的表示方式，维基百科讲得挺清楚的。
# 然后在草稿纸上试着转换一下，可以发现规律，除了一些数字的转换规律比较复杂以外，
# 其他的数字都是可以在此基础上直接累加即可，所以干脆把特殊转换规律的字符直接列出来表示，
# 其实可以发现所谓特殊转换规律的字符就是两个特殊罗马字符左减得到的数字。
# 然后将数字从高位开始相减，每减去一个高位，就得到对应的一个罗马字符，将所有相减过程取到的罗马字符
# 连接起来就是转换后的罗马数字了。